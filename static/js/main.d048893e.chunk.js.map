{"version":3,"sources":["app/services/localStorage.service.js","app/services/http.service.js","app/services/user.service.js","app/hooks/useAuth.jsx","app/components/common/form/checkBoxField.jsx","app/components/common/form/textField.jsx","app/components/ui/loginForm.jsx","app/utils/validator.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/services/quality.service.js","app/hooks/useQuality.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/hooks/useUsers.jsx","app/components/common/listGroup.jsx","app/components/common/pagination.jsx","app/components/common/searchBar.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualities/index.js","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/search.js","app/utils/paginate.js","app/services/comment.service.js","app/hooks/useComments.jsx","app/components/ui/cards/meetingsCard.jsx","app/components/ui/cards/qualitiesCard.jsx","app/components/ui/cards/userCard.jsx","app/components/common/form/textAreaField.jsx","app/components/ui/comments/addCommentForm.jsx","app/utils/formatDate.js","app/utils/declOfNum.js","app/components/ui/comments/comment.jsx","app/components/ui/comments/commentsList.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/page/editUserPage/editUserPage.jsx.jsx","app/layouts/users.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/App.js","index.js"],"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USER_ID_KEY","setTokens","expiresIn","idToken","localId","refreshToken","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","http","axios","create","baseURL","configFile","apiEndPoint","interceptors","request","use","config","a","isFireBase","containSlash","test","url","slice","now","httpAuth","post","grant_type","refresh_token","data","id_token","expires_in","user_id","accessToken","params","auth","error","Promise","reject","response","res","content","_id","Object","keys","map","key","status","console","log","toast","httpService","get","put","patch","delete","userEndpoint","userService","payload","getCurrentUser","updateUser","process","REACT_APP_FIREBASE_KEY","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setUser","setError","isLoading","setLoading","history","useHistory","randomInt","min","max","Math","floor","random","email","password","rest","returnSecureToken","createUser","rate","completedMeetings","image","toString","substring","errorCatcher","code","message","getUserData","Error","useEffect","Provider","value","signUp","signIn","logOut","push","CheckBoxField","name","onChange","className","type","id","checked","htmlFor","TextField","label","placeholder","showPassword","setShowPassword","target","onClick","prevState","defaultProps","initialData","stayOn","LoginForm","setData","errors","setErrors","enterError","setEnterError","validateScheme","yup","shape","required","validate","then","catch","err","path","length","isValid","handleChange","handleSubmit","e","preventDefault","location","state","from","pathname","onSubmit","disabled","validator","validateMethod","statusValidate","trim","fieldName","SelectField","defaultOption","options","optionsArray","Array","isArray","optionName","defaultValue","option","RadioField","MultiSelectField","closeMenuOnSelect","isMulti","classNamePrefix","qualityService","QualitiesContext","useQualities","QualitiesProvider","qualities","setQualitiesList","getQualitiesList","getQualityById","find","p","professionService","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","getProfessions","getProfessionById","RegisterForm","profession","sex","license","qualitiesList","q","validatorConfig","isRequired","isEmail","isCapitalSymbol","isContainDigit","newData","href","Login","useParams","formType","setFormType","toggleFormType","role","UserContext","useUsers","UserProvider","users","setUsers","getUsers","newUsers","indexUser","findIndex","u","getUserById","userId","user","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","ceil","pages","_","range","page","SearchBar","onSearch","searchStatus","text","BookMark","classes","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","order","column","undefined","scope","TableBody","renderContent","component","Table","Profession","prof","Quality","color","QualitiesList","userQualities","filter","includes","Qualities","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","selectedProf","setSelectedProf","sortBy","setSortBy","searchQuery","setSearchQuery","filteredUsers","query","searchBy","el","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","event","onDelete","pageIndex","commentEndpoint","commentService","createComment","getComments","pageId","equalTo","removeComment","commentId","CommentsContext","CommentsProvider","comments","setComments","comment","nanoid","created_at","MeetingsCard","QualitiesCard","UserCard","style","zIndex","src","width","TextAreaField","rows","AddCommentForm","formatDate","Number","currentDateTime","postCreatedTime","diffTime","abs","year","getFullYear","month","getMonth","day","getDate","hours","getHours","getMinutes","months","getValidTime","oneMinutesAgo","thirtyMinutesAgo","lessOneDay","lessCurrentYear","checkLeapYear","minutes","n","words","n1","declOfNum","Comment","created","onRemove","alt","height","CommentsList","Comments","sortedComments","sort","b","UserPage","professionLoading","EditUserPage","setIsLoading","qualitiesLoading","transformData","qual","goBack","values","Users","edit","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summaryCount","reduce","acc","cur","incrementCount","quality","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","ProtectedRoute","Component","render","props","LogOut","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d048893e.chunk.js","sourcesContent":["const TOKEN_KEY = 'jwt-token';\r\nconst REFRESH_KEY = 'jwt-refresh-token';\r\nconst EXPIRES_KEY = 'jwt-expires';\r\nconst USER_ID_KEY = 'user-local-id';\r\n\r\nexport function setTokens({ expiresIn = 3600, idToken, localId, refreshToken }) {\r\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n\r\n  localStorage.setItem(TOKEN_KEY, idToken);\r\n  localStorage.setItem(REFRESH_KEY, refreshToken);\r\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n  localStorage.setItem(USER_ID_KEY, localId);\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n  return localStorage.getItem(USER_ID_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(REFRESH_KEY);\r\n  localStorage.removeItem(EXPIRES_KEY);\r\n  localStorage.removeItem(USER_ID_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getTokenExpiresDate,\r\n  getUserId,\r\n  removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport configFile from '../config.json';\r\nimport { httpAuth } from '../hooks/useAuth';\r\nimport localStorageService from './localStorage.service';\r\n\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url);\r\n      config.url = (containSlash ? config.url.slice(0, -1) : config.url) + '.json';\r\n      const expiresDate = localStorageService.getTokenExpiresDate();\r\n      const refreshToken = localStorageService.getRefreshToken();\r\n      if (refreshToken && expiresDate < Date.now()) {\r\n        const { data } = await httpAuth.post('token', {\r\n          grant_type: 'refresh_token',\r\n          refresh_token: refreshToken\r\n        });\r\n        localStorageService.setTokens({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          expiresIn: data.expires_in,\r\n          localId: data.user_id\r\n        });\r\n      }\r\n      const accessToken = localStorageService.getAccessToken();\r\n      if (accessToken) {\r\n        config.params = { ...config.params, auth: accessToken };\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nfunction TransformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({\r\n        ...data[key]\r\n      }))\r\n    : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n  (res) => {\r\n    if (configFile.isFireBase) {\r\n      res.data = { content: TransformData(res.data) };\r\n    }\r\n    return res;\r\n  },\r\n  function (error) {\r\n    const expectedErrors =\r\n      error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedErrors) {\r\n      console.log(error);\r\n      toast.error('Something was wrong. Try it later');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  patch: http.patch,\r\n  delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from './http.service';\r\nimport localStorageService from './localStorage.service';\r\n\r\nconst userEndpoint = 'user/';\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint);\r\n    return data;\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndpoint + payload._id, payload);\r\n    return data;\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(userEndpoint + localStorageService.getUserId());\r\n    return data;\r\n  },\r\n  updateUser: async (payload) => {\r\n    const { data } = await httpService.patch(\r\n      userEndpoint + localStorageService.getUserId(),\r\n      payload\r\n    );\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default userService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport userService from '../services/user.service';\r\nimport { toast } from 'react-toastify';\r\nimport localStorageService, { setTokens } from '../services/localStorage.service';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const httpAuth = axios.create({\r\n  baseURL: 'https://identitytoolkit.googleapis.com/v1/',\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n});\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setUser] = useState();\r\n  const [error, setError] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  function randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  function logOut() {\r\n    localStorageService.removeAuthData();\r\n    setUser(null);\r\n    history.push('/');\r\n  }\r\n\r\n  async function signUp({ email, password, ...rest }) {\r\n    try {\r\n      const { data } = await httpAuth.post(`accounts:signUp`, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      });\r\n      setTokens(data);\r\n      await createUser({\r\n        _id: data.localId,\r\n        email,\r\n        rate: randomInt(1, 5),\r\n        completedMeetings: randomInt(0, 200),\r\n        image: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\r\n          .toString(36)\r\n          .substring(7)}.svg`,\r\n        ...rest\r\n      });\r\n      console.log(data);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n      const { code, message } = error.response.data.error;\r\n      if (code === 400) {\r\n        if (message === 'EMAIL_EXISTS') {\r\n          const errorObject = { email: 'Пользователь с таким email уже существует' };\r\n          throw errorObject;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function signIn({ email, password }) {\r\n    try {\r\n      const { data } = await httpAuth.post(`accounts:signInWithPassword`, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      });\r\n      setTokens(data);\r\n      await getUserData();\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n      const { code, message } = error.response.data.error;\r\n      if (code === 400) {\r\n        switch (message) {\r\n          case 'USER_DISABLED':\r\n            throw new Error('Учетная запись пользователя отключена администратором.');\r\n          case 'EMAIL_NOT_FOUND':\r\n          case 'INVALID_PASSWORD':\r\n          case 'INVALID_EMAIL':\r\n            throw new Error('Неверный email или пароль');\r\n          default:\r\n            throw new Error('Слишком много попыток входа, попробуйте позже');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function createUser(data) {\r\n    try {\r\n      const { content } = await userService.create(data);\r\n      setUser(content);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  async function updateUser(data) {\r\n    try {\r\n      const { content } = await userService.updateUser(data);\r\n      setUser(content);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  const getUserData = async () => {\r\n    try {\r\n      const { content } = await userService.getCurrentUser();\r\n      setUser(content);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorageService.getAccessToken()) {\r\n      getUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ signUp, signIn, currentUser, logOut, updateUser }}>\r\n      {!isLoading ? children : 'Loading...'}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check mb-4\">\r\n      <input\r\n        className={getInputClasses()}\r\n        type=\"checkbox\"\r\n        value=\"\"\r\n        id={name}\r\n        onChange={handleChange}\r\n        checked={value}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={name}>\r\n        {children}\r\n      </label>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBoxField.propTypes = {\r\n  name: PropTypes.string,\r\n  value: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, placeholder, name, value, onChange, error }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <input\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n          type={showPassword ? 'text' : type}\r\n          className={getInputClasses()}\r\n        />\r\n        {type === 'password' && (\r\n          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}>\r\n            <i className={`bi bi-eye${showPassword ? '-slash' : ''}`}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as yup from 'yup';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\n\r\nconst initialData = { email: '', password: '', stayOn: false };\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState(initialData);\r\n  const [errors, setErrors] = useState({});\r\n  const [enterError, setEnterError] = useState(null);\r\n  const { signIn } = useAuth();\r\n\r\n  // console.log(history.location.state.from.pathname);\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup.string().required('пароль обязателен для заполнения'),\r\n    email: yup.string().required('Электронная почта обязательна для заполнения')\r\n  });\r\n\r\n  const validate = () => {\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }));\r\n\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    setEnterError(null);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    try {\r\n      await signIn(data);\r\n      history.push(history.location.state ? history.location.state.from.pathname : '/');\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setEnterError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n\r\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\r\n        Оставаться в системе\r\n      </CheckBoxField>\r\n      {enterError && <p className=\"text-danger text-center\">{enterError}</p>}\r\n\r\n      <button\r\n        className=\"btn btn-primary w-100 mx-auto\"\r\n        type=\"submit\"\r\n        disabled={!isValid || enterError}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export function validator(data, config) {\r\n  const errors = {};\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate;\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data;\r\n        } else {\r\n          statusValidate = data.trim() === '';\r\n        }\r\n        break;\r\n      }\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n          statusValidate = !emailRegExp.test(data);\r\n        }\r\n        break;\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g;\r\n        statusValidate = !capitalRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'isContainDigit': {\r\n        const digitRegExp = /\\d+/;\r\n        statusValidate = !digitRegExp.test(data);\r\n        break;\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (statusValidate) return config.message;\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error;\r\n      }\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({ label, value, name, onChange, defaultOption, options, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '');\r\n  };\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        id=\"validationCustom04\"\r\n        value={value}\r\n        name={name}\r\n        onChange={handleChange}>\r\n        <option disabled value=\"\" key={defaultOption} defaultValue={defaultOption}>\r\n          {defaultOption}\r\n        </option>\r\n        {optionsArray &&\r\n          optionsArray.map((option) => (\r\n            <option\r\n              key={option.value || option._id}\r\n              value={option.value || option._id}\r\n              name={option.name}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div key={option.name + '_' + option.value} className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={option.name + '_' + option.value}>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadioField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue, error }) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options;\r\n\r\n  const handleChange = (value) => {\r\n    onChange({ name: name, value });\r\n  };\r\n\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label className=\"form-label\">{label}</label>\r\n      <div className=\"input-group has-validation\">\r\n        <Select\r\n          closeMenuOnSelect={false}\r\n          isMulti\r\n          defaultValue={defaultValue}\r\n          options={optionsArray}\r\n          className={getInputClasses()}\r\n          classNamePrefix=\"select\"\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiSelectField.propTypes = {\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  defaultValue: PropTypes.array,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import httpService from './http.service';\r\n\r\nconst qualityEndpoint = 'quality/';\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default qualityService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport qualityService from '../services/quality.service';\r\n\r\nconst QualitiesContext = React.createContext();\r\n\r\nexport const useQualities = () => useContext(QualitiesContext);\r\n\r\nexport const QualitiesProvider = ({ children }) => {\r\n  const [qualities, setQualitiesList] = useState([]);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getQualitiesList = async () => {\r\n    try {\r\n      const { content } = await qualityService.get();\r\n      setQualitiesList(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  const getQualityById = (id) => {\r\n    return qualities.find((p) => p._id === id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQualitiesList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <QualitiesContext.Provider value={{ isLoading, qualities, getQualityById }}>\r\n      {children}\r\n    </QualitiesContext.Provider>\r\n  );\r\n};\r\n\r\nQualitiesProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import httpService from './http.service';\r\n\r\nconst professionEndpoint = 'profession/';\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default professionService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport professionService from '../services/profession.service';\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfessions = () => useContext(ProfessionContext);\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [professions, setProfessions] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getProfessions = async () => {\r\n    try {\r\n      const { content } = await professionService.get();\r\n      setProfessions(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  const getProfessionById = (id) => {\r\n    return professions.find((p) => p._id === id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfessions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <ProfessionContext.Provider value={{ isLoading, professions, getProfessionById }}>\r\n      {children}\r\n    </ProfessionContext.Provider>\r\n  );\r\n};\r\n\r\nProfessionProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport { useQualities } from '../../hooks/useQuality';\r\nimport { useProfessions } from '../../hooks/useProfession';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst RegisterForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    name: '',\r\n    qualities: [],\r\n    license: false\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { qualities } = useQualities();\r\n  const qualitiesList = qualities.map((q) => ({ label: q.name, value: q._id }));\r\n\r\n  const { professions } = useProfessions();\r\n\r\n  const { signUp } = useAuth();\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: {\r\n        message: 'email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: { message: 'Имя обязательно для заполнения' },\r\n      min: {\r\n        message: 'Имя должно состоять минимум из 3 символов',\r\n        value: 3\r\n      }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'пароль обязателен для заполнения' },\r\n      isCapitalSymbol: {\r\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n      },\r\n      isContainDigit: {\r\n        message: 'Пароль должен содержать хотя бы одно число'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен состоять минимум из 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Обязательно выберите вашу профессию' }\r\n    },\r\n    license: {\r\n      isRequired: {\r\n        message: 'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\r\n    console.log(newData);\r\n    try {\r\n      await signUp(newData);\r\n      history.push('/');\r\n    } catch (error) {\r\n      setErrors(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Электронная почта\"\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Введите ваш e-mail\"\r\n        value={data.email}\r\n        onChange={handleChange}\r\n        error={errors.email}\r\n      />\r\n      <TextField\r\n        label=\"Имя\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Введите ваше Имя\"\r\n        value={data.name}\r\n        onChange={handleChange}\r\n        error={errors.name}\r\n      />\r\n      <TextField\r\n        label=\"Пароль\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Введите пароль\"\r\n        value={data.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <SelectField\r\n        label=\"Выберите вашу профессию\"\r\n        name=\"profession\"\r\n        value={data.profession}\r\n        error={errors.profession}\r\n        defaultOption=\"Choose...\"\r\n        options={professions}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <RadioField\r\n        options={[\r\n          { name: 'Male', value: 'male' },\r\n          { name: 'Female', value: 'female' },\r\n          { name: 'Other', value: 'other' }\r\n        ]}\r\n        value={data.sex}\r\n        name=\"sex\"\r\n        onChange={handleChange}\r\n        label=\"Выберите ваш пол\"\r\n      />\r\n      <MultiSelectField\r\n        options={qualitiesList}\r\n        onChange={handleChange}\r\n        name=\"qualities\"\r\n        label=\"Выберите ваши качества\"\r\n        defaultValue={data.qualities}\r\n      />\r\n      <CheckBoxField\r\n        name=\"license\"\r\n        value={data.license}\r\n        onChange={handleChange}\r\n        error={errors.license}>\r\n        Подтвердить <a href=\"#\">лицензионное соглашение</a>\r\n      </CheckBoxField>\r\n\r\n      <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoginForm from '../components/ui/loginForm';\r\nimport RegisterForm from '../components/ui/registerForm';\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login');\r\n\r\n  const toggleFormType = () => {\r\n    setFormType((prevState) => (prevState === 'register' ? 'login' : 'register'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className=\"mb-4\">Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className=\"mb-4\">Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                Dont have account?\r\n                <a role=\"button\" onClick={toggleFormType}>\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport userService from '../services/user.service';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from './useAuth';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUsers = () => useContext(UserContext);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const { content } = await userService.get();\r\n      setUsers(content);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      const newUsers = [...users];\r\n      const indexUser = newUsers.findIndex((u) => u._id === currentUser._id);\r\n      newUsers[indexUser] = currentUser;\r\n      setUsers(newUsers);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n\r\n  function getUserById(userId) {\r\n    return users.find((user) => user._id === userId);\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{ users, isLoading, getUserById }}>\r\n      {!isLoading ? children : <h1>Loading...</h1>}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nUserProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n  if (!Array.isArray(items)) {\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {Object.keys(items).map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            role=\"button\"\r\n            className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n            onClick={() => onItemSelect(items[item])}>\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          role=\"button\"\r\n          className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n          onClick={() => onItemSelect(item)}>\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n            <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from './form/textField';\r\n\r\nconst SearchBar = ({ value, onSearch }) => {\r\n  return (\r\n    <>\r\n      <TextField\r\n        name=\"search\"\r\n        placeholder=\"Поиск...\"\r\n        type=\"search\"\r\n        value={value}\r\n        onChange={onSearch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n  let text = `${length} человек тусанет с тобой сегодня`;\r\n  let className = 'badge bg-primary';\r\n\r\n  if (length <= 4 && length > 1) {\r\n    text = `${length} человека тусанут с тобой сегодня`;\r\n  }\r\n  if (length === 0) {\r\n    text = 'Никто с тобой не тусанет';\r\n    className = 'badge bg-danger';\r\n  }\r\n\r\n  return (\r\n    <h2>\r\n      <span className={className}>{text}</span>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, onClick }) => {\r\n  let classes = 'bi bi-bookmark';\r\n  classes = status ? 'bi bi-bookmark-fill' : classes;\r\n\r\n  return (\r\n    <button className=\"btn btn-primary\" onClick={onClick}>\r\n      <i className={classes}></i>\r\n    </button>\r\n  );\r\n};\r\nBookMark.propTypes = {\r\n  id: PropTypes.string,\r\n  status: PropTypes.bool,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n    } else {\r\n      onSort({ path: item, order: 'asc' });\r\n    }\r\n  };\r\n\r\n  const renderSortArrow = (selectedSort, currentPath) => {\r\n    if (selectedSort.path === currentPath) {\r\n      if (selectedSort.order === 'asc') {\r\n        return <i className=\"bi bi-caret-down-fill\"></i>;\r\n      } else {\r\n        return <i className=\"bi bi-caret-up-fill\"></i>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope=\"col\">\r\n            {columns[column].name}\r\n            {renderSortArrow(selectedSort, columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === 'function') {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import Table from './table';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nexport default Table;\r\nexport { TableBody, TableHeader };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { useProfessions } from '../../hooks/useProfession';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profession = ({ id }) => {\r\n  const { isLoading, getProfessionById } = useProfessions();\r\n  const prof = getProfessionById(id);\r\n\r\n  if (!isLoading) {\r\n    return <p>{prof.name}</p>;\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nProfession.propTypes = {\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Profession;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quality = ({ name, color }) => {\r\n  const classes = 'badge m-1 bg-';\r\n  return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQuality.propTypes = {\r\n  name: PropTypes.string,\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default Quality;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quality from './quality';\r\nimport { useQualities } from '../../../hooks/useQuality';\r\n\r\nconst QualitiesList = ({ data }) => {\r\n  const { qualities, isLoading } = useQualities();\r\n  if (!data) return null;\r\n  const userQualities = qualities.filter((q) => data.includes(q._id));\r\n\r\n  return !isLoading ? (\r\n    <>\r\n      {userQualities.map((item) => (\r\n        <Quality key={item._id} {...item} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <h2>Loading...</h2>\r\n  );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n  data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import Qualities from './qualitiesList';\r\nexport default Qualities;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BookMark from '../common/bookmark';\r\nimport Table from '../common/table';\r\nimport Profession from './profession';\r\nimport Qualities from '../ui/qualities';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark }) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <Qualities data={user.qualities} />\r\n    },\r\n    professions: { name: 'Профессия', component: (user) => <Profession id={user.profession} /> },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n      )\r\n    }\r\n  };\r\n\r\n  return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","/* eslint-disable indent */\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useProfessions } from '../../../hooks/useProfession';\r\nimport { useUsers } from '../../../hooks/useUsers';\r\nimport { paginate } from '../../../utils/paginate';\r\nimport searchBy from '../../../utils/search';\r\nimport ListGroup from '../../common/listGroup';\r\nimport Pagination from '../../common/pagination';\r\nimport SearchBar from '../../common/searchBar';\r\nimport SearchStatus from '../../ui/searchStatus';\r\nimport UsersTable from '../../ui/usersTable';\r\n\r\nconst UsersListPage = () => {\r\n  const { users } = useUsers();\r\n  const { professions, isLoading: professionsLoading } = useProfessions();\r\n  const { currentUser } = useAuth();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const pageSize = 8;\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf]);\r\n\r\n  const handleDelete = (userId) => {\r\n    // return setUsers(users.filter((user) => user._id !== userId));\r\n  };\r\n\r\n  const handleToggleBookMark = (userId) => {\r\n    // setUsers(\r\n    //   users.filter((user) => {\r\n    //     if (user._id === userId) {\r\n    //       user.bookmark = !user.bookmark;\r\n    //       return user;\r\n    //     }\r\n    //     return user;\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSearchQuery('');\r\n    setSelectedProf(item);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSelectedProf();\r\n    setSearchQuery(event.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf();\r\n    setSearchQuery('');\r\n  };\r\n\r\n  if (users) {\r\n    function filterUsers(data) {\r\n      const filteredUsers = searchQuery\r\n        ? searchBy(data, searchQuery, { searchBy: 'name' })\r\n        : selectedProf\r\n        ? data.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n        : data;\r\n      return filteredUsers.filter((user) => user._id !== currentUser._id);\r\n    }\r\n\r\n    const filteredUsers = filterUsers(users);\r\n\r\n    const count = filteredUsers.length;\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"d-flex\">\r\n        {professions && !professionsLoading && (\r\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n            <ListGroup\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"d-flex flex-column\">\r\n          <SearchStatus length={count} />\r\n          <SearchBar data={users} value={searchQuery} onSearch={handleSearch} />\r\n          {count > 0 && (\r\n            <UsersTable\r\n              users={usersCrop}\r\n              onSort={handleSort}\r\n              selectedSort={sortBy}\r\n              onToggleBookMark={handleToggleBookMark}\r\n              onDelete={handleDelete}\r\n            />\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              onPageChange={handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersListPage.propTypes = {\r\n  users: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n  onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersListPage;\r\n","export default function searchBy(data, query, config = { searchBy: 'name' }) {\r\n  return data.filter((el) => el[config.searchBy].toLowerCase().includes(query.toLowerCase()));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import httpService from './http.service';\r\n\r\nconst commentEndpoint = 'comment/';\r\n\r\nconst commentService = {\r\n  createComment: async (payload) => {\r\n    const { data } = await httpService.put(commentEndpoint + payload._id, payload);\r\n    return data;\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentEndpoint, {\r\n      params: {\r\n        orderBy: '\"pageId\"',\r\n        equalTo: `\"${pageId}\"`\r\n      }\r\n    });\r\n    return data;\r\n  },\r\n  removeComment: async (commentId) => {\r\n    const { data } = await httpService.delete(commentEndpoint + commentId);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default commentService;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth } from './useAuth';\r\nimport { nanoid } from 'nanoid';\r\nimport commentService from '../services/comment.service';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst CommentsContext = React.createContext();\r\n\r\nexport const useComments = () => {\r\n  return useContext(CommentsContext);\r\n};\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [comments, setComments] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const { userId } = useParams();\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, [userId]);\r\n\r\n  async function createComment(data) {\r\n    const comment = {\r\n      ...data,\r\n      _id: nanoid(),\r\n      pageId: userId,\r\n      created_at: Date.now(),\r\n      userId: currentUser._id\r\n    };\r\n    try {\r\n      const { content } = await commentService.createComment(comment);\r\n      setComments((prevState) => [...prevState, content]);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  async function getComments() {\r\n    try {\r\n      const { content } = await commentService.getComments(userId);\r\n      setComments(content);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function removeComment(id) {\r\n    try {\r\n      const { content } = await commentService.removeComment(id);\r\n      if (content === null) {\r\n        setComments((prevState) => prevState.filter((comment) => comment._id !== id));\r\n      }\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <CommentsContext.Provider value={{ isLoading, comments, createComment, removeComment }}>\r\n      {children}\r\n    </CommentsContext.Provider>\r\n  );\r\n};\r\n\r\nCommentsProvider.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MeetingsCard = ({ value }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Завершенных встреч</span>\r\n        </h5>\r\n\r\n        <h1 className=\"display-1\">{value}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMeetingsCard.propTypes = {\r\n  value: PropTypes.number\r\n};\r\n\r\nexport default MeetingsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QualitiesList from '../qualities/qualitiesList';\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n        <h5 className=\"card-title\">\r\n          <span>Качества</span>\r\n        </h5>\r\n        <div className=\"card-text\">\r\n          <QualitiesList data={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQualitiesCard.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\n\r\nconst UserCard = ({ user }) => {\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const handleClick = () => {\r\n    history.push(history.location.pathname + '/edit');\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        {currentUser._id === user._id && (\r\n          <button\r\n            className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n            style={{ zIndex: 2 }}\r\n            onClick={handleClick}>\r\n            <i className=\"bi bi-gear\"></i>\r\n          </button>\r\n        )}\r\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n          <img src={user.image} className=\"rounded-circle\" width=\"150\" />\r\n          <div className=\"mt-3\">\r\n            <h4>{user.name}</h4>\r\n            <p className=\"text-secondary mb-1\">{user.profession.name}</p>\r\n            <div className=\"text-muted\">\r\n              <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\r\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\r\n              <span className=\"ms-2\">{user.rate}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserCard.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error, rows }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className={'form-control' + (error ? ' is-invalid' : '')}\r\n        name={name}\r\n        value={value}\r\n        id={name}\r\n        rows={rows}\r\n        onChange={handleChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nTextAreaField.defaultProps = {\r\n  type: 'text',\r\n  rows: 3\r\n};\r\n\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  rows: PropTypes.number\r\n};\r\n\r\nexport default TextAreaField;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { validator } from '../../../utils/validator';\r\nimport TextAreaField from '../../common/form/textAreaField';\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n  const [data, setData] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const validatorConfig = {\r\n    content: {\r\n      isRequired: { message: 'Поле \"Сообщение\" не должно быть пустым' }\r\n    }\r\n  };\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setData({});\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    onSubmit(data);\r\n    clearForm();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>New comment</h2>\r\n          <div className=\"mb-4\"></div>\r\n          <div className=\"mb-4\">\r\n            <TextAreaField\r\n              label=\"Сообщение\"\r\n              name=\"content\"\r\n              value={data.content || ''}\r\n              onChange={handleChange}\r\n              error={errors.content}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-row-reverse\">\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!isValid}>\r\n              Опубликовать\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCommentForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import declOfNum from './declOfNum';\r\n\r\nexport default function formatDate(value) {\r\n  if (typeof value === 'string') {\r\n    value = Number(value);\r\n  }\r\n  const currentDateTime = Date.now();\r\n  const postCreatedTime = Number(value);\r\n  const diffTime = Math.abs(currentDateTime - postCreatedTime);\r\n\r\n  const year = new Date(value).getFullYear();\r\n  const month = new Date(value).getMonth();\r\n  const day = new Date(value).getDate();\r\n  const hours = new Date(value).getHours();\r\n  const min = new Date(value).getMinutes();\r\n\r\n  const months = [\r\n    'Января',\r\n    'Февраля',\r\n    'Марта',\r\n    'Апреля',\r\n    'Мая',\r\n    'Июня',\r\n    'Июля',\r\n    'Августа',\r\n    'Сентября',\r\n    'Октября',\r\n    'Ноября',\r\n    'Декабря'\r\n  ];\r\n\r\n  const checkLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  };\r\n\r\n  const getValidTime = (hours, min) => {\r\n    hours = hours < 10 ? `0${hours}` : hours;\r\n    min = min < 10 ? `0${min}` : min;\r\n    return `${hours}:${min}`;\r\n  };\r\n\r\n  const oneMinutesAgo = 60000;\r\n  const thirtyMinutesAgo = oneMinutesAgo * 30;\r\n  const lessOneDay = oneMinutesAgo * 60 * 24;\r\n  const lessCurrentYear = lessOneDay * (checkLeapYear(year) ? 366 : 365);\r\n\r\n  if (diffTime <= oneMinutesAgo) {\r\n    return 'только что';\r\n  } else if (diffTime <= thirtyMinutesAgo) {\r\n    const minutes = Math.floor(diffTime / 60000);\r\n    return `${minutes} ${declOfNum(minutes, ['минута', 'минуты', 'минут'])} назад`;\r\n  } else if (diffTime > thirtyMinutesAgo && diffTime <= lessOneDay) {\r\n    return `сегодня в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessOneDay && diffTime <= lessCurrentYear) {\r\n    return `${day} ${months[month]} в ${getValidTime(hours, min)}`;\r\n  } else if (diffTime > lessCurrentYear) {\r\n    return `${day} ${months[month]} ${year} года в ${getValidTime(hours, min)}`;\r\n  } else {\r\n    return `Этот комментарий оставило НЛО из будущего ¯\\\\_(ツ)_/¯`;\r\n  }\r\n}\r\n","export default function declOfNum(n, words) {\r\n  n = Math.abs(n) % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) {\r\n    return words[2];\r\n  }\r\n  if (n1 > 1 && n1 < 5) {\r\n    return words[1];\r\n  }\r\n  if (n1 === 1) {\r\n    return words[0];\r\n  }\r\n  return words[2];\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useUsers } from '../../../hooks/useUsers';\r\nimport formatDate from '../../../utils/formatDate';\r\n\r\nconst Comment = ({ content, created_at: created, _id: id, userId, onRemove }) => {\r\n  const { getUserById } = useUsers();\r\n  const { currentUser } = useAuth();\r\n  const user = getUserById(userId);\r\n  return (\r\n    <div className=\"bg-light card-body  mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"d-flex flex-start \">\r\n            <img\r\n              src={user.image}\r\n              className=\"rounded-circle shadow-1-strong me-3\"\r\n              alt=\"avatar\"\r\n              width=\"65\"\r\n              height=\"65\"\r\n            />\r\n            <div className=\"flex-grow-1 flex-shrink-1\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <p className=\"mb-1 \">\r\n                    {user.name} - <span className=\"small\">{formatDate(created)}</span>\r\n                  </p>\r\n                  {currentUser._id === userId && (\r\n                    <button\r\n                      className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                      onClick={() => onRemove(id)}>\r\n                      <i className=\"bi bi-x-lg\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <p className=\"small mb-0\">{content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object,\r\n  onRemove: PropTypes.func,\r\n  content: PropTypes.string,\r\n  created_at: PropTypes.number,\r\n  _id: PropTypes.string,\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Comment from './comment';\r\n\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body \">\r\n        <h2>Комментарии</h2>\r\n        <hr />\r\n        {comments.map((comment) => (\r\n          <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  comments: PropTypes.array,\r\n  onRemove: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from 'react';\r\nimport { useComments } from '../../hooks/useComments';\r\nimport AddCommentForm from './comments/addCommentForm';\r\nimport CommentsList from './comments/commentsList';\r\n\r\nconst Comments = () => {\r\n  const { removeComment, createComment, comments } = useComments();\r\n\r\n  const handleRemoveComment = (id) => {\r\n    removeComment(id);\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    createComment(data);\r\n  };\r\n\r\n  const sortedComments = comments.sort((a, b) => b.created_at - a.created_at);\r\n  return (\r\n    <>\r\n      <AddCommentForm onSubmit={handleSubmit} />\r\n      {sortedComments.length > 0 && (\r\n        <CommentsList comments={sortedComments} onRemove={handleRemoveComment} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { CommentsProvider } from '../../../hooks/useComments';\r\nimport { useProfessions } from '../../../hooks/useProfession';\r\nimport { useUsers } from '../../../hooks/useUsers';\r\nimport MeetingsCard from '../../ui/cards/meetingsCard';\r\nimport QualitiesCard from '../../ui/cards/qualitiesCard';\r\nimport UserCard from '../../ui/cards/userCard';\r\nimport Comments from '../../ui/comments';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const { getUserById } = useUsers();\r\n  const { getProfessionById, isLoading: professionLoading } = useProfessions();\r\n  let user = getUserById(userId);\r\n\r\n  if (!professionLoading) {\r\n    user = { ...user, profession: getProfessionById(user.profession) };\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <UserCard user={user} />\r\n            <QualitiesCard data={user.qualities} />\r\n            <MeetingsCard value={user.completedMeetings} />\r\n          </div>\r\n\r\n          <div className=\"col-md-8\">\r\n            <CommentsProvider>\r\n              <Comments />\r\n            </CommentsProvider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { useProfessions } from '../../../hooks/useProfession';\r\nimport { useQualities } from '../../../hooks/useQuality';\r\nimport { validator } from '../../../utils/validator';\r\nimport MultiSelectField from '../../common/form/multiSelectField';\r\nimport RadioField from '../../common/form/radioField';\r\nimport SelectField from '../../common/form/selectField';\r\nimport TextField from '../../common/form/textField';\r\n\r\nconst EditUserPage = () => {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [errors, setErrors] = useState({});\r\n  const { currentUser, updateUser } = useAuth();\r\n  const { professions, isLoading: professionsLoading } = useProfessions();\r\n  const { qualities, isLoading: qualitiesLoading, getQualityById } = useQualities();\r\n\r\n  const handleChange = (target) => {\r\n    setErrors({});\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }));\r\n  };\r\n\r\n  const transformData = (data) => {\r\n    return data.map((qual) => ({\r\n      label: qual.name,\r\n      value: qual._id\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!qualitiesLoading && !professionsLoading) {\r\n      setData({\r\n        ...currentUser,\r\n        qualities: transformData(currentUser.qualities.map((q) => getQualityById(q)))\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }, [qualitiesLoading, professionsLoading]);\r\n\r\n  useEffect(() => {\r\n    if (data && isLoading) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n\r\n    const { qualities } = data;\r\n    updateUser({ ...data, qualities: qualities.map((q) => q.value) }).then(() => {\r\n      history.push(`/users/${currentUser._id}`);\r\n    });\r\n    console.log(history);\r\n  };\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: {\r\n        message: 'Электронная почта обязательна для заполнения'\r\n      },\r\n      isEmail: {\r\n        message: 'Email введен некорректно'\r\n      }\r\n    },\r\n    name: {\r\n      isRequired: {\r\n        message: 'Введите ваше имя'\r\n      }\r\n    },\r\n    qualities: {\r\n      min: {\r\n        message: 'Выберите не меньше одного качества',\r\n        value: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n        Назад\r\n      </button>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          {!isLoading ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Имя\"\r\n                placeholder=\"Введите Имя\"\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n              />\r\n              <TextField\r\n                label=\"Электронная почта\"\r\n                placeholder=\"Введите электронную почту\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n              />\r\n              <SelectField\r\n                label=\"Выбери свою профессию\"\r\n                defaultOption=\"Choose...\"\r\n                name=\"profession\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n                value={data.profession}\r\n                error={errors.profession}\r\n              />\r\n              <RadioField\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n              />\r\n              <MultiSelectField\r\n                defaultValue={data.qualities}\r\n                options={transformData(qualities)}\r\n                onChange={handleChange}\r\n                values\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n                error={errors.qualities}\r\n              />\r\n              <button type=\"submit\" disabled={!isValid} className=\"btn btn-primary w-100 mx-auto\">\r\n                Обновить\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            'Loading...'\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React from 'react';\r\nimport { useParams, Redirect } from 'react-router';\r\nimport UsersListPage from '../components/page/usersListPage';\r\nimport UserPage from '../components/page/userPage';\r\nimport EditUserPage from '../components/page/editUserPage/editUserPage.jsx';\r\nimport UserProvider from '../hooks/useUsers';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst Users = () => {\r\n  const params = useParams();\r\n  const { userId, edit } = params;\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <>\r\n      <UserProvider>\r\n        {userId && edit ? (\r\n          currentUser._id === userId ? (\r\n            <EditUserPage />\r\n          ) : (\r\n            <Redirect to={`/users/${currentUser._id}/edit`} />\r\n          )\r\n        ) : userId ? (\r\n          <UserPage userId={userId} />\r\n        ) : (\r\n          <UsersListPage />\r\n        )}\r\n      </UserProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useEffect, useState } from 'react';\r\nimport professions from '../mockData/professions.json';\r\nimport qualities from '../mockData/qualities.json';\r\nimport users from '../mockData/users.json';\r\nimport httpService from '../services/http.service';\r\n\r\nconst useMockData = () => {\r\n  const statusConsts = {\r\n    idle: 'Not Started',\r\n    pending: 'In Process',\r\n    success: 'Ready',\r\n    error: 'Error occurred'\r\n  };\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(statusConsts.idle);\r\n  const [progress, setProgress] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const summaryCount = [professions, qualities, users].reduce((acc, cur) => acc + cur.length, 0);\r\n\r\n  const incrementCount = () => {\r\n    setCount((prevState) => prevState + 1);\r\n  };\r\n\r\n  const updateProgress = () => {\r\n    if (count !== 0 && status === statusConsts.idle) {\r\n      setStatus(statusConsts.pending);\r\n    }\r\n    const newProgress = Math.floor((count / summaryCount) * 100);\r\n    if (progress < newProgress) {\r\n      setProgress(() => newProgress);\r\n    }\r\n    if (newProgress === 100) {\r\n      setStatus(statusConsts.success);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateProgress();\r\n  }, [count]);\r\n\r\n  async function initialize() {\r\n    try {\r\n      for (const prof of professions) {\r\n        await httpService.put('profession/' + prof._id, prof);\r\n        incrementCount();\r\n      }\r\n      for (const user of users) {\r\n        await httpService.put('user/' + user._id, user);\r\n        incrementCount();\r\n      }\r\n      for (const quality of qualities) {\r\n        await httpService.put('quality/' + quality._id, quality);\r\n        incrementCount();\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n      setStatus(statusConsts.error);\r\n    }\r\n  }\r\n\r\n  return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from 'react';\r\nimport useMockData from '../utils/mockData';\r\n\r\nconst Main = () => {\r\n  const { error, initialize, progress, status } = useMockData();\r\n\r\n  const handleClick = () => {\r\n    console.log('clicked');\r\n    initialize();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Main Page</h1>\r\n      <h3>Инициализация данных в FireBase</h3>\r\n      <ul>\r\n        <li>Status: {status}</li>\r\n        <li>Progress: {progress}%</li>\r\n        {error && <li>error: {error}</li>}\r\n      </ul>\r\n      <button className=\"btn btn-primary\" onClick={handleClick}>\r\n        Инициализировать\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nconst NavProfile = () => {\r\n  const { currentUser } = useAuth();\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setOpen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\" onClick={toggleMenu}>\r\n      <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n        <div className=\"me-2\">{currentUser.name}</div>\r\n        <img\r\n          src={currentUser.image}\r\n          alt=\"userAvatar\"\r\n          height=\"40\"\r\n          className=\"img-responsive rounded-circle\"\r\n        />\r\n      </div>\r\n      <div className={'w-100 dropdown-menu' + (isOpen ? ' show' : '')}>\r\n        <Link className=\"dropdown-item\" to={`/users/${currentUser._id}`}>\r\n          Profile\r\n        </Link>\r\n        <Link to=\"/logout\" className=\"dropdown-item\">\r\n          Logout\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport NavProfile from './navProfile';\r\n\r\nconst NavBar = () => {\r\n  const { currentUser } = useAuth();\r\n  return (\r\n    <nav className=\"navbar bg-light mb-3\">\r\n      <div className=\"container-fluid\">\r\n        <ul className=\"nav nav-tabs m-3\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Main\r\n            </Link>\r\n          </li>\r\n          {currentUser && (\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/users\" className=\"nav-link\">\r\n                Users\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className=\"d-flex\">\r\n          {currentUser ? (\r\n            <NavProfile />\r\n          ) : (\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(props);\r\n        if (!currentUser) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        return Component ? <Component {...props} /> : children;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  location: PropTypes.object,\r\n  match: PropTypes.object,\r\n  params: PropTypes.object,\r\n  userId: PropTypes.string\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst LogOut = () => {\r\n  const { logOut } = useAuth();\r\n  useEffect(() => {\r\n    logOut();\r\n  }, []);\r\n  return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/ui/navBar';\r\nimport { ProfessionProvider } from './hooks/useProfession';\r\nimport { QualitiesProvider } from './hooks/useQuality';\r\nimport AuthProvider from './hooks/useAuth';\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\nimport LogOut from './layouts/logOut';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AuthProvider>\r\n        <NavBar />\r\n        <QualitiesProvider>\r\n          <ProfessionProvider>\r\n            <Switch>\r\n              <ProtectedRoute path=\"/users/:userId?/:edit?\" component={Users} />\r\n              <Route path=\"/login/:type?\" component={Login} />\r\n              <Route path=\"/logout\" component={LogOut} />\r\n              <Route exact path=\"/\" component={Main} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </ProfessionProvider>\r\n        </QualitiesProvider>\r\n      </AuthProvider>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}